<platform_solution><objects><dropdown_cust_field><divider_text></divider_text><name>brPaymentTerms</name><never_copy>false</never_copy><values><value>Due on receipt</value><value>1% 10 Net 30</value><value>14 Days</value><value>Net 15</value><value>2% 10 Net 30</value><value>28 Days</value><value>30 Days</value><value>45 Days</value><value>Net 60</value></values><description></description><with_notes>false</with_notes><required>false</required><hint></hint><association>projectbillingrule</association><title>Payment Terms</title><hidden>false</hidden><divider>false</divider></dropdown_cust_field><date_cust_field><unique>false</unique><divider_text></divider_text><default_to_current_date>false</default_to_current_date><name>expectedBillDate</name><never_copy>false</never_copy><description></description><with_notes>false</with_notes><required>false</required><hint></hint><hidden>false</hidden><title>Expected Payment Date</title><association>projectbillingrule</association><divider>false</divider></date_cust_field><form_script><custom_fields><custom_field>expectedBillDate</custom_field><custom_field>brPaymentTerms</custom_field></custom_fields><name>expected_pymnt_date.js</name><event>on_submit</event><libraries></libraries><comments></comments><entrance_function>main</entrance_function><parameters></parameters><__is_linked>true</__is_linked><association>edit_project_billing_rule_fixed</association><code><![CDATA[function main(type) {
    var billdate = NSOA.form.getValue('start_date');
    var pymntterms = NSOA.form.getValue('brPaymentTerms__c');
    var paymentoffset;
    try{
		switch(pymntterms){
        case 'Due on receipt' : paymentoffset = 0; 
            break;
        case '1% 10 Net 30' : paymentoffset = 30; 
            break;
        case '14 Days' : paymentoffset = 14; 
            break;
        case 'Net 15' : paymentoffset = 15; 
            break;
        case '2% 10 Net 30' : paymentoffset = 30; 
            break;
        case '28 Days' : paymentoffset = 28; 
            break;
        case '30 Days' : paymentoffset = 30;
            break;
        case '45 Days' : paymentoffset = 45;
            break;
        case 'Net 60' : paymentoffset = 60;
            break;
        default : NSOA.meta.log('error', 'Unable to calculate date offset.'); 
            
    }
    
    var paydate = new Date(billdate.getTime() + (paymentoffset * 24 * 60 * 60 * 1000));
    NSOA.form.setValue('expectedBillDate__c',paydate);
    }
    catch(error){
        NSOA.meta.log('error',error);
    }
}]]></code></form_script></objects><version>1.1</version><title>Expected Payment Date</title><description>Calculates the Expected Payment Date for a Billing Milestone</description></platform_solution>